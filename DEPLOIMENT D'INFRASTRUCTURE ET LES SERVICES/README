# Systemes-Distribues-pour-le-Traitement-de-Donnees-sur-le-cloud

 ## Guide d'installation et d'utilisation ##

- Clonner le projet sur votre machine : 
```
#git clone https://github.com/Ghanouch/Systemes-Distribues-pour-le-Traitement-de-Donnees-sur-le-cloud.git
```

### I - Lancement du deploiment : ###

- Executer la commande suivante  : 
```
#cd DEPLOIMENT\ D\'INFRASTRUCTURE\ ET\ LES\ SERVICES/terraform
```
#####
- Installer préalablement terraform: https://www.terraform.io/intro/getting-started/install.html
#####

- Génerer 2 clé RSA une pour le bastion et l'autre pour le reste de la stack grâce à:
```
#ssh-keygen
```
- Vous devez choisir alors les noms à attribuer aux clés. Ex : "deployer" et "cluster_interconnection" respectivement pour la clé du bastion et la clé de la stack. Elles doivent être mises dans le dossier "terraform"
		
- Ouvrir le fichier "secret.tfvars" dans le dossier "terraform" et remplir les champs suivants:
```
access_key et secret_key : respectivement la clé d'accès et la clé secrète de votre utilisateur AWS  

region: la région où le cluster va être déployé, exemple: "us-east-1"

ami: ami de la machine ubuntu 16.04 d'AWS, on la retrouve lorsqu'on essaie de créer manuellement une machine (nous ne pouvons malheusement pas vous en donner, puiqu'elles changent en continu)

cassandra_ami: même que "ami" mais celle de ubuntu 14.04

deployer_public_key: le contenu de la clé publique du bastion

cluster_public_key: le contenu de la clé publique de la stack

cassandra_instance_type: la taille des machines cassandra (minimum medium)

opscenter_instace_type: la taille de la machine opscenter (minimum medium)
```
- En fin,lancer le script wrap-up.sh en sudo si possible (parfois il faut des droits d'administrateur)
        
	
- Si vous voulez détruire la stack, ouvrez un termial dans le dossier "terraform" et utilisez la commande suivante:
```terraform destroy -var-file secret.tfvars```
######
